/*
 * Application.c
 *
 *  Created on:29/10/2018
 *      Author: Alejandro
 */

#include "Application.h"
#include "WAIT1.h"
#include "FX1.h"
#include "FAT1.h"
#include "UTIL1.h"
#include "PORT_PDD.h"
#include "AS1.h"
#include "GPS.h"
#include "LEDR.h"
#include "LEDG.h"
#include "task.h"
#include "queue.h"

xQueueHandle caracteres;
caracteres=FRTOS1_xQueueCreate(24,8);

static FAT1_FATFS fileSystemObject;
static FIL file;

static void Err(void) {
  for(;;){}
}


static void CharGPS(void) {
	byte err;
	AS1_TComData ch;
	do {
	    	    err = GPS_RecvChar(&ch);
	    	    //err2 = AS1_RecvChar(&ch);
	    	  } while((err != ERR_OK));
    FRTOS1_xQueueSendToFront(caracteres, ch ,(portTickType) 100);

}


static void Imprime (void) {
	AS1_TComData ch;
	int i;
	for(;;) {
		if(xQueueReceive(caracteres , (void *) ch ,(portTickType) 0xFFFFFFFF) == pdTRUE){
		/* Se ha recibido un dato. Se escribe por el puerto serie */
			for(i = 0; i < sizeof(ch); i++)
			while(AS1_SendChar(ch[i]) != ERR_OK) {}
			while(AS1_SendChar(10) != ERR_OK) {}
			while(AS1_SendChar(13) != ERR_OK) {}
		}
	}
}

void APP_Run(void) {
  int16_t x,y,z;
  uint8_t ack;


  /* Deteccion de la tarjeta SD: PTE6 con pull-down! */
  PORT_PDD_SetPinPullSelect(PORTE_BASE_PTR, 6, PORT_PDD_PULL_DOWN);
  PORT_PDD_SetPinPullEnable(PORTE_BASE_PTR, 6, PORT_PDD_PULL_ENABLE);

  ack = FX1_Enable(); /* Activa el acelerometro */
  if (ack!=ERR_OK) {
    Err();
  }
  if (FAT1_Init()!=ERR_OK) { /* Comprueba FAT */
    Err();
  }
  if (FAT1_mount(&fileSystemObject, "0", 1) != FR_OK) { /* Comprueba el archivo del sistema */
    Err();
  }

  if (xTaskCreate(
	   CharGPS, /* función de la tarea*/
	  "gps", /* nombre de la tarea para el kernel */
	  configMINIMAL_STACK_SIZE, /* tamaño pila asociada a la tarea */
	  (void*)NULL, /*puntero a los parámetros iniciales de la tarea */
	  3,/* prioridad de la tarea, cuanto más bajo es el número menor es la prioridad */
	  NULL /* manejo de la tarea, NULL si ni se va a crear o destruir */
  ) != pdPASS) { /* devuelve pdPASS si se ha creado la tarea */
	  for(;;){} /* error! Probablemente sin memoria */
	  }

  for(;;) {

	  if (GPS_GetCharsInRxBuf()==0) {
				LEDR_Neg(); LEDG_Off(); /* Luz roja en caso de no recibir señal GPS */
			  } else {
				LEDR_Off(); LEDG_Neg(); /* Luz ver en caso contrario */
			  }
	  CharGPS();

  }
}
